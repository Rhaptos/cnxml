<?xml version="1.0" encoding="utf-8"?>

<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         ns="http://cnx.rice.edu/cnxml">

<!--
  Attribute Definitions
-->

  <define name="id-attribute">
    <attribute name="id">
      <data datatypeLibrary="http://relaxng.org/ns/compatibility/datatypes/1.0" 
            type="ID"/>
    </attribute>
  </define>

  <define name="class-attribute">
    <attribute name="class"/>
  </define>

  <define name="foreign-namespaced-attribute">
    <attribute>
      <anyName>
        <except>
          <nsName ns=""/>
          <nsName ns="http://cnx.rice.edu/cnxml"/>
        </except>
      </anyName>
    </attribute>
  </define>

  <!-- We enumerate supported values, but any text values are accepted. -->
  <define name="effect-attribute">
    <attribute name="effect">
      <choice>
        <value>bold</value>
        <value>italics</value>
        <value>underline</value>
        <value>normal</value>
        <value>smallcaps</value>
        <text/>
      </choice>
    </attribute>
  </define>

  <define name="display-attribute">
    <attribute name="display" a:defaultValue="block">
      <choice>
        <value>block</value>
        <value>inline</value>
        <value>none</value>
      </choice>
    </attribute>
  </define>

  <define name="display-block-attribute">
    <attribute name="display" a:defaultValue="block">
      <optional>
        <value>block</value>
      </optional>
    </attribute>
  </define>

  <define name="display-inline-attribute">
    <attribute name="display" a:defaultValue="inline">
      <optional>
        <value>inline</value>
      </optional>
    </attribute>
  </define>

  <define name="display-none-attribute">
    <attribute name="display" a:defaultValue="none">
      <optional>
        <value>none</value>
      </optional>
    </attribute>
  </define>

  <!-- May be revised to have values of 1-5 -->
  <define name="strength-attribute">
    <attribute name="strength">
      <choice>
        <value>1</value>
        <value>2</value>
        <value>3</value>
      </choice>
    </attribute>
  </define>

  <define name="window-attribute">
    <attribute name="window" a:defaultValue="replace">
      <choice>
        <value>replace</value>
        <value>new</value>
      </choice>
    </attribute>
  </define>

  <define name="url-attribute">
    <attribute name="url"/>
  </define>

  <define name="document-attribute">
    <attribute name="document"/>
  </define>

  <define name="version-attribute">
    <attribute name="version"/>
  </define>

  <define name="targetid-attribute">
    <attribute name="targetid"/>
  </define>

  <define name="resource-attribute">
    <attribute name="resource"/>
  </define>

  <!-- Attributes pattern for 'link' element.  Require at least one 
       attribute that points to a link target: either @url, or at 
       least one of the old cnxn-style linking attributes (@document, 
       @targetid, or @resource).  It takes a little effort to make 
       this pattern unambiguous.  -->
  <define name="link-attributes">
    <group>
      <optional>
        <ref name="strength-attribute"/>
      </optional>
      <optional>
        <ref name="window-attribute"/>
      </optional>
      <choice>
        <ref name="url-attribute"/>
        <group>
          <ref name="document-attribute"/>
          <ref name="version-attribute"/>
          <optional>
            <choice>
              <ref name="targetid-attribute"/>
              <ref name="resource-attribute"/>
            </choice>
          </optional>
        </group>
        <group>
          <ref name="document-attribute"/>
          <optional>
            <choice>
              <ref name="targetid-attribute"/>
              <ref name="resource-attribute"/>
            </choice>
          </optional>
        </group>
        <group>
          <ref name="version-attribute"/>
          <optional>
            <choice>
              <ref name="targetid-attribute"/>
              <ref name="resource-attribute"/>
            </choice>
          </optional>
        </group>
        <group>
          <choice>
            <ref name="targetid-attribute"/>
            <ref name="resource-attribute"/>
          </choice>
        </group>
      </choice>
    </group>
  </define>

  <!-- For linking elements other than 'link'.  Here we can afford to 
       make each attribute optional, so no problems with ambiguity.  -->
  <define name="linking-attributes">
    <group>
      <optional>
        <ref name="strength-attribute"/>
      </optional>
      <optional>
        <ref name="window-attribute"/>
      </optional>
      <optional>
        <choice>
          <ref name="url-attribute"/>
          <group>
            <optional>
              <ref name="document-attribute"/>
            </optional>
            <optional>
              <ref name="version-attribute"/>
            </optional>
            <optional>
              <choice>
                <ref name="targetid-attribute"/>
                <ref name="resource-attribute"/>
              </choice>
            </optional>
          </group>
        </choice>
      </optional>
    </group>
  </define>

  <define name="note-type-attribute">
    <attribute name="type" a:defaultValue="note">
      <choice>
        <value>note</value>
        <value>aside</value>
        <value>warning</value>
        <value>tip</value>
        <value>important</value>
        <text/>
      </choice>
    </attribute>
  </define>

  <define name="list-type-attribute">
    <attribute name="list-type" a:defaultValue="bulleted">
      <choice>
        <value>bulleted</value>
        <value>enumerated</value>
        <value>labeled-item</value>
        <text/>
      </choice>
    </attribute>
  </define>

  <define name="bulleted-list-type-attribute">
    <attribute name="list-type">
      <value>bulleted</value>
    </attribute>
  </define>

  <define name="enumerated-list-type-attribute">
    <attribute name="list-type">
      <value>enumerated</value>
    </attribute>
  </define>

  <define name="labeled-item-list-type-attribute">
    <attribute name="list-type">
      <value>labeled-item</value>
    </attribute>
  </define>

  <define name="bullet-style-attribute">
    <attribute name="bullet-style" a:defaultValue="bullet">
      <choice>
        <value>bullet</value>
        <value>opencircle</value>
        <value>pilcrow</value>
        <value>rpilcrow</value>
        <value>asterisk</value>
        <value>dash</value>
        <value>section</value>
        <value>none</value>
        <text/>
      </choice>
    </attribute>
  </define>

  <define name="number-style-attribute">
    <attribute name="number-style" a:defaultValue="arabic">
      <choice>
        <value>arabic</value>
        <value>upperalpha</value>
        <value>loweralpha</value>
        <value>upperroman</value>
        <value>lowerroman</value>
      </choice>
    </attribute>
  </define>

  <define name="sep-before-attribute">
    <attribute name="sep-before"/>
  </define>

  <define name="sep-after-attribute">
    <attribute name="sep-after" a:defaultValue="."/>
  </define>

  <define name="labeled-item-sep-after-attribute">
    <attribute name="sep-after" a:defaultValue=":"/>
  </define>

  <define name="item-sep-attribute">
    <attribute name="item-sep" a:defaultValue=";"/>
  </define>

  <define name="start-value-attribute">
    <attribute name="start-value"/>
  </define>

  <define name="code-lang-attribute">
    <attribute name="lang"/>
  </define>

  <define name="code-listing-type-attribute">
    <attribute name="type">
      <value>listing</value>
    </attribute>
  </define>

  <define name="alt-attribute">
    <attribute name="alt-attribute"/>
  </define>

  <define name="longdesc-attribute">
    <attribute name="longdesc-attribute"/>
  </define>

  <define name="common-attributes">
    <optional>
      <ref name="class-attribute"/>
    </optional>
    <optional>
      <ref name="foreign-namespaced-attribute"/>
    </optional>
    <optional>
      <attribute name="xml:lang"/>
    </optional>
  </define>

<!--
  Content Classes
-->

  <define name="inline-class">
    <choice>
      <text/>
      <ref name="span"/>
      <ref name="term"/>
      <ref name="cite"/>
      <ref name="citetitle"/>
      <ref name="foreign"/>
      <ref name="emphasis"/>
      <ref name="sub"/>
      <ref name="sup"/>
      <ref name="inline-code"/>
      <ref name="inline-preformat"/>
      <ref name="inline-quote"/>
      <ref name="inline-note"/>
      <ref name="inline-list"/>
      <ref name="inline-media"/>
      <ref name="footnote"/>
      <ref name="link"/>
    </choice>
  </define>

  <define name="basic-blocks-class">
    <choice>
      <ref name='div'/>
      <ref name='definition'/>
      <ref name='example'/>
      <ref name='figure'/>
      <ref name='block-code'/>
      <ref name="code-listing"/>
      <ref name='block-preformat'/>
      <ref name='block-quote'/>
      <ref name='block-note'/>
      <ref name='block-media'/>
      <ref name='block-list'/>
      <ref name='table'/>
      <ref name='rule'/>
      <ref name='equation'/>
      <ref name='exercise'/>
    </choice>
  </define>

  <define name="para-content-class">
    <choice>
      <ref name="inline-class"/>
      <ref name="basic-blocks-class"/>
    </choice>
  </define>

  <define name="div-content-class">
    <choice>
      <ref name="para"/>
      <ref name="para-content-class"/>
    </choice>
  </define>

  <define name="section-content-class">
    <choice>
      <ref name="section"/>
      <ref name="div-content-class"/>
    </choice>
  </define>

  <define name="media-object-class">
    <choice>
      <ref name="object"/>
      <ref name="image"/>
      <ref name="audio"/>
      <ref name="video"/>
      <ref name="javaapplet"/>
      <ref name="flash"/>
      <ref name="labview"/>
      <ref name="text"/>
      <ref name="download"/>
    </choice>
  </define>

<!--
  Shared Content Models
-->

  <define name="inline-content">
    <ref name="common-attributes"/>
    <optional>
      <ref name="id-attribute"/>
    </optional>
    <zeroOrMore>
      <ref name="inline-class"/>
    </zeroOrMore>
  </define>

  <define name="div-content">
    <oneOrMore>
      <optional>
        <ref name="title"/>
      </optional>
      <oneOrMore>
        <ref name="div-content-class"/>
      </oneOrMore>
    </oneOrMore>
  </define>

<!--
  Element Definitions
-->

  <define name="document">
    <element name="document">
      <ref name="id-attribute"/><!-- Rename this object-id -->
      <ref name="common-attributes"/>
      <ref name="document-title"/>
      <optional>
        <ref name="metadata"/>
      </optional>
      <optional>
        <ref name="featured-links"/>
      </optional>
      <ref name="content"/>
      <optional>
        <ref name="glossary"/>
      </optional>
    </element>
  </define>

  <define name="metadata">
    <element name="metadata">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="metadata-content"/>
    </element>
  </define>

  <define name="featured-links">
    <element name="featured-links">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <oneOrMore>
        <ref name="link-group"/>
      </oneOrMore>
    </element>
  </define>

  <define name="metadata-content">
    <zeroOrMore>
      <choice>
        <element>
          <anyName/>
        </element>
        <text/>
      </choice>
    </zeroOrMore>
  </define>

  <define name="content">
    <element name="content">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <oneOrMore>
        <ref name="section-content-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="glossary">
    <element name="glossary">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <oneOrMore>
        <ref name="definition"/>
      </oneOrMore>
    </element>
  </define>

  <define name="section">
    <element name="section">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <zeroOrMore>
        <ref name="label"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="title"/>
      </zeroOrMore>
      <oneOrMore>
        <ref name="section-content-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="div">
    <element name="div">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="block-preformat">
    <element name="preformat">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="display-block-attribute"/>
      </optional>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="inline-preformat">
    <element name="preformat">
      <ref name="display-inline-attribute"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="para">
    <element name="para">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="title"/>
      </optional>
      <oneOrMore>
        <ref name="para-content-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="title">
    <element name="title">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="document-title">
    <element name="title">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <text/>
    </element>
  </define>

  <define name="label">
    <element name="label">
      <ref name="inline-content"/>
    </element>
  </define>

<!-- FIXME: Define space-related elements here -->

  <define name="span">
    <element name="span">
      <optional>
        <ref name="effect-attribute"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="cite">
    <element name="cite">
      <ref name="linking-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="citetitle">
    <element name="citetitle">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="link">
    <element name="link">
      <ref name="link-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="emphasis">
    <element name="emphasis">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="term">
    <element name="term">
      <ref name="linking-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="sub">
    <element name="sub">
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="sup">
    <element name="sup">
      <ref name="inline-content"/>
    </element>
  </define>

<!-- FIXME: need inline and block definitions! -->
  <define name="quote">
    <element name="quote">
      <ref name="linking-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="foreign">
    <element name="foreign">
      <ref name="linking-attributes"/>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="footnote">
    <element name="footnote">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="div-content"/>
    </element>
  </define>

<!-- FIXME: Do we want to continue to permit 'media' or text in 'equation'? -->
  <define name="equation">
    <element name="equation">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="title"/>
      </optional>
      <choice>
        <ref name="media"/>
        <text/>
      </choice>
    </element>
  </define>

  <define name="inline-note">
    <element name="note">
      <ref name="display-inline-attribute"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="note-type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="block-note">
    <element name="note">
      <optional>
        <ref name="display-block-attribute"/>
      </optional>
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="note-type-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="div-content"/>
    </element>
  </define>

  <define name="list-common-content">
    <ref name="common-attributes"/>
    <optional>
      <ref name="sep-before-attribute"/>
    </optional>
    <optional>
      <ref name="item-sep-attribute"/>
    </optional>
    <optional>
      <ref name="title"/>
    </optional>
    <oneOrMore>
      <ref name="item"/>
    </oneOrMore>
  </define>

  <define name="block-list-common-content">
    <optional>
      <ref name="display-block-attribute"/>
    </optional>
    <ref name="id"/>
  </define>

  <define name="inline-list-common-content">
    <ref name="display-inline-attribute"/>
    <optional>
      <ref name="id"/>
    </optional>
  </define>

  <define name="bulleted-list-common-content">
    <ref name="bulleted-list-type-attribute"/>
    <optional>
      <ref name="sep-after-attribute"/>
    </optional>
    <ref name="bullet-style-attribute"/>
    <ref name="list-common-content"/>
  </define>

  <define name="bulleted-block-list">
    <element name="list">
      <ref name="bulleted-list-common-content"/>
      <ref name="block-list-common-content"/>
      <ref name="list-common-content"/>
    </element>
  </define>

  <define name="bulleted-inline-list">
    <element name="list">
      <ref name="bulleted-list-common-content"/>
      <ref name="inline-list-common-content"/>
      <ref name="list-common-content"/>
    </element>
  </define>

  <define name="enumerated-list-common-content">
    <optional>
      <ref name="sep-after-attribute"/>
    </optional>
    <ref name="enumerated-list-type-attribute"/>
    <ref name="number-style-attribute"/>
    <ref name="start-value-attribute"/>
  </define>

  <define name="enumerated-block-list">
    <element name="list">
      <ref name="enumerated-list-common-content"/>
      <ref name="block-list-common-content"/>
      <ref name="list-common-content"/>
    </element>
  </define>

  <define name="enumerated-inline-list">
    <element name="list">
      <ref name="enumerated-list-common-content"/>
      <ref name="inline-list-common-content"/>
      <ref name="list-common-content"/>
    </element>
  </define>

  <define name="labeled-item-list-common-content">
    <optional>
      <ref name="labeled-item-sep-after-attribute"/>
    </optional>
    <ref name="labeled-item-list-type-attribute"/>
  </define>

  <define name="labeled-item-block-list">
    <element name="list">
      <ref name="labeled-item-list-common-content"/>
      <ref name="block-list-common-content"/>
      <ref name="list-common-content"/>
    </element>
  </define>

  <define name="labeled-item-inline-list">
    <element name="list">
      <ref name="labeled-item-list-common-content"/>
      <ref name="inline-list-common-content"/>
      <ref name="list-common-content"/>
    </element>
  </define>

  <define name="block-list">
    <choice>
      <ref name="bulleted-block-list"/>
      <ref name="enumerated-block-list"/>
      <ref name="labeled-item-block-list"/>
    </choice>
  </define>

  <define name="inline-list">
    <choice>
      <ref name="bulleted-inline-list"/>
      <ref name="enumerated-inline-list"/>
      <ref name="labeled-item-inline-list"/>
    </choice>
  </define>

  <define name="item">
    <element name="item">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <oneOrMore>
        <ref name="div-content-class"/>
      </oneOrMore>
    </element>
  </define>

  <define name="block-code">
    <element name="code">
      <ref name="display-block-attribute"/>
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <ref name="code-lang-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="inline-code">
    <element name="code">
      <optional>
        <ref name="display-inline-attribute"/>
      </optional>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="code-lang-attribute"/>
      <ref name="inline-content"/>
    </element>
  </define>

<!-- FIXME: code[@class="listing"] may be a problem, since @class 
     takes multiple space-separated values, and we can't create a 
     RelaxNG pattern that matches 'listing' somewhere in an attribute 
     value. -->

  <define name="code-listing">
    <element name="code">
      <optional>
        <ref name="display-block-attribute"/>
      </optional>
      <ref name="code-listing-type-attribute"/>
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="code-lang-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <ref name="inline-content"/>
      <optional>
        <ref name="caption"/>
      </optional>
    </element>
  </define>

<!-- NOTE: I have removed 'table' and 'code' as possible content for 
     'figure', but this decision can be revisited. -->
  <define name="figure">
    <element name="figure">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <choice>
        <ref name="media"/>
        <group>
          <ref name="subfigure"/>
          <oneOrMore>
            <ref name="subfigure"/>
          </oneOrMore>
        </group>
      </choice>
      <optional>
        <ref name="caption"/>
      </optional>
    </element>
  </define>

  <define name="subfigure">
    <element name="subfigure">
      <ref name="common-attributes"/>
      <ref name="id-attribute"/>
      <optional>
        <ref name="label"/>
      </optional>
      <optional>
        <ref name="title"/>
      </optional>
      <choice>
        <ref name="media"/>
        <ref name="table"/>
        <ref name="block-code"/>
      </choice>
      <optional>
        <ref name="caption"/>
      </optional>
    </element>
  </define>

  <define name="caption">
    <element name="caption">
      <ref name="common-attributes"/>
      <optional>
        <ref name="id-attribute"/>
      </optional>
      <ref name="inline-content"/>
    </element>
  </define>

  <define name="media-common-content">
    <ref name="common-attributes"/>
    <ref name="id-attribute"/>
    <ref name="alt-attribute"/>
    <ref name="longdesc"/>
    <ref name="media-object-class"/>
    <optional>
      <ref name="media-object-class"/>
    </optional>
  </define>

  <define name="block-media">
    <element name="media">
      <ref name="display-block-attribute"/>
      <ref name="media-common-content"/>
    </element>
  </define>

  <define name="inline-media">
    <element name="media">
      <optional>
        <ref name="display-inline-attribute"/>
      </optional>
      <ref name="media-common-content"/>
    </element>
  </define>

  <define name="nodisplay-media">
    <element name="media">
      <ref name="display-none-attribute"/>
      <ref name="media-common-content"/>
    </element>
  </define>

  <define name="longdesc">
    <choice>
      <ref name="longdesc-attribute"/>
      <element name="longdesc">
        <ref name="common-attributes"/>
        <ref name="div-content"/>
      </element>
    </choice>
  </define>

  <define name="media">
    <choice>
      <ref name="block-media"/>
      <ref name="inline-media"/>
      <ref name="nodisplay-media"/>
    </choice>
  </define>

<!-- FIXME: stub definitions for media children -->
  <define name="object">
    <element name="object">
    </element>
  </define>

  <define name="image">
    <element name="image">
    </element>
  </define>

  <define name="audio">
    <element name="audio">
    </element>
  </define>

  <define name="video">
    <element name="video">
    </element>
  </define>

  <define name="audio">
    <element name="audio">
    </element>
  </define>

  <define name="javaapplet">
    <element name="javaapplet">
    </element>
  </define>

  <define name="flash">
    <element name="flash">
    </element>
  </define>

  <define name="labview">
    <element name="labview">
    </element>
  </define>

  <define name="text">
    <element name="text">
    </element>
  </define>

  <define name="download">
    <element name="download">
    </element>
  </define>


</grammar>
